{
    "title": "ライセンスドキュメント",
    "integration_guide": {
        "title": "ライセンス統合ガイド",
        "description": "このドキュメントでは、ライセンスシステムをアプリケーションに統合するプロセスを案内します。"
    },
    "installation": {
        "title": "インストール",
        "description": "インストールと初期設定の詳細な手順。",
        "tabs": {
            "php": "シンプルPHP",
            "laravel": "Laravel",
            "flutter": "Flutter"
        },
        "php": {
            "title": "PHPのインストール",
            "description": "標準PHPアプリケーションにライセンスシステムを統合するには："
        },
        "laravel": {
            "title": "Laravelのインストール",
            "description": "Laravelアプリケーションにライセンスシステムを統合するには：",
            "step1": "1. サービスプロバイダーを作成する",
            "step2": "2. ライセンスサービスを作成する",
            "step3": "3. 設定ファイルを作成する",
            "step4": "4. サービスプロバイダーをconfig/app.phpに追加する"
        },
        "flutter": {
            "title": "Flutterのインストール",
            "description": "Flutterアプリケーションにライセンスシステムを統合するには：",
            "step1": "1. pubspec.yamlに依存関係を追加する",
            "step2": "2. ライセンスサービスを作成する",
            "step3": "3. アプリケーションでの使用例"
        }
    },
    "verification": {
        "title": "ライセンス検証",
        "description": "アプリケーションでライセンス検証を実装する方法。",
        "security_tip": "最適なセキュリティのために、アプリケーションの起動時と使用中に定期的にライセンスを検証することをお勧めします。",
        "best_practices": {
            "title": "ベストプラクティス",
            "item1": "ライセンスキーを安全に保存する（暗号化された設定ファイル、データベース）",
            "item2": "検証結果をキャッシュして過剰なリクエストを避ける",
            "item3": "ライセンスサーバーへの接続失敗時の縮退動作を計画する",
            "item4": "長時間実行されるアプリケーションには定期的な検証を実装する",
            "item5": "ライセンスサーバーとのすべての通信にHTTPSを使用する"
        }
    },
    "api": {
        "title": "ライセンス管理API",
        "description": "ライセンス管理APIの完全なドキュメント。",
        "link_text": "詳細なAPIドキュメントについては、",
        "link_title": "APIドキュメント"
    }
}
